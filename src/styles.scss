body {
  background-color: #e5e5e5;
  font-family: 'Segoe UI', Arial, serif;
  margin: 0;
}

h1 {
  display: inline-block;
  font-family: Roboto, 'Segoe UI', Times, serif;
  font-size: 2.8em;
  font-weight: 600;
  margin: 0 8px 0 10px;
  min-width: 300px;
}

a:visited h1 {
  color: black;
}

h2 {
  font-family: 'Segoe UI', Arial, serif;
  font-size: 1.5em;
  font-weight: 500;
}

p {
  margin: 10px;
}

a {
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* header */

header {
  margin: 10px;
}

header > .align-center {
  display: flex;
  max-width: 400px;
}

header > .align-center > div {
  display: flex;
  flex-direction: column;
}

/* footer */

footer {
  display: block;
  font-size: 14px;
  margin: 0 10%;
  padding: 10px;
}

footer > .align-center {
  display: flex;
  max-width: 195px;
}

footer a {
  color: #555;
  padding: 0 5px;
}

footer a:visited {
  color: #888;
}

footer a:hover {
  color: #222;
}

/* misc */

.align-center {
  margin: 0 auto;
}

.noselect {
   -khtml-user-select: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.nodrag {
   -khtml-user-drag: none;
  -webkit-user-drag: none;
     -moz-user-drag: none;
      -ms-user-drag: none;
          user-drag: none;
}

/* loading */

.icon-load {
  animation: spin 1s linear infinite;
  display: flex;
  fill: #aaa;
  margin: 0 auto;
  padding: 10px;
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

/* input */

input[type='text'],
input[type='number'],
input[type='password'],
select {
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: .8em;
  padding: 5px 8px;
}

input[type='checkbox'] {
  cursor: pointer;
}

label {
  display: block;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
       -o-user-select: none;
          user-select: none;
}

input[type='textbox']:checked {
  background-color: #5f9ea0 !important;
}

/* button */

button {
   -khtml-user-select: none;
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 5px;
  cursor: pointer;
  display: inline-flex;
  fill: #666;
  font: 13.3333px Arial;
  padding: 7px;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

button > a {
  color: #000;
  display: block;
  text-decoration: none;
}

button:hover:not(:disabled) {
  background-color: #5f9ea0;
  color: #fff;
  fill: #fff;
}

button:hover:not(:disabled) > a {
  color: #fff;
  fill: #fff;
}

button:disabled {
  background-color: #bbb;
}

/* svg - text*/

svg text {
  cursor: default;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

svg text::selection {
  background: none;
}

/* @media */

@media (max-width: 1200px) {
  .content {
    margin: 0;
  }

  h1 {
    font-size: 2em;
    margin-left: 10px;
    min-width: 220px;
  }

  header {
    height: 2.6em;
  }

  header .icon-logo {
    height: 44px;
    width: 44px;
  }

  header .logo {
    height: 44px;
  }

  header > .align-center {
    max-width: 300px;
  }
}

/* gold */

.gold {
  color: #7d6400;
}

/* TODO: https://github.com/angular/angular/issues/19445 */
$base-color: hsl(90, 60, 40);

@for $count from 1 through 33 {
  $color: adjust-hue($base-color, $count * 90 + ($count / 8) * 12.5);

  g[lbItemCurve]:not(.child):nth-of-type(#{$count}) {
     > g[lbCurve] > path {
      stroke: $color;
    }

     > g.child {
       > g[lbCurve] > path {
        stroke: lighten($color, 15);
      }

       > g.child {
         > g[lbCurve] > path {
          stroke: lighten($color, 30);
        }

         > g.child {
           > g[lbCurve] > path {
            stroke: lighten($color, 45);
          }
        }
      }
    }
  }
}
